<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [MFX_1709\MFX_1709.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image MFX_1709\MFX_1709.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Nov 21 18:47:21 2019
<BR><P>
<H3>Maximum Stack Usage =        424 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; MX_MEMS_Init &rArr; MX_IKS01A2_DataLogTerminal_Init &rArr; floatToInt &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[69]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[69]">ADC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[96]">BSP_GetTick</a> from stm32f4xx_nucleo_bus.o(i.BSP_GetTick) referenced from iks01a2_env_sensors.o(i.HTS221_0_Probe)
 <LI><a href="#[96]">BSP_GetTick</a> from stm32f4xx_nucleo_bus.o(i.BSP_GetTick) referenced from iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
 <LI><a href="#[96]">BSP_GetTick</a> from stm32f4xx_nucleo_bus.o(i.BSP_GetTick) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
 <LI><a href="#[96]">BSP_GetTick</a> from stm32f4xx_nucleo_bus.o(i.BSP_GetTick) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
 <LI><a href="#[96]">BSP_GetTick</a> from stm32f4xx_nucleo_bus.o(i.BSP_GetTick) referenced from iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
 <LI><a href="#[93]">BSP_I2C1_DeInit</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_DeInit) referenced from iks01a2_env_sensors.o(i.HTS221_0_Probe)
 <LI><a href="#[93]">BSP_I2C1_DeInit</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_DeInit) referenced from iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
 <LI><a href="#[93]">BSP_I2C1_DeInit</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_DeInit) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
 <LI><a href="#[93]">BSP_I2C1_DeInit</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_DeInit) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
 <LI><a href="#[93]">BSP_I2C1_DeInit</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_DeInit) referenced from iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
 <LI><a href="#[92]">BSP_I2C1_Init</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_Init) referenced from iks01a2_env_sensors.o(i.HTS221_0_Probe)
 <LI><a href="#[92]">BSP_I2C1_Init</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_Init) referenced from iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
 <LI><a href="#[92]">BSP_I2C1_Init</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_Init) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
 <LI><a href="#[92]">BSP_I2C1_Init</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_Init) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
 <LI><a href="#[92]">BSP_I2C1_Init</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_Init) referenced from iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
 <LI><a href="#[94]">BSP_I2C1_ReadReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_ReadReg) referenced from iks01a2_env_sensors.o(i.HTS221_0_Probe)
 <LI><a href="#[94]">BSP_I2C1_ReadReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_ReadReg) referenced from iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
 <LI><a href="#[94]">BSP_I2C1_ReadReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_ReadReg) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
 <LI><a href="#[94]">BSP_I2C1_ReadReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_ReadReg) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
 <LI><a href="#[94]">BSP_I2C1_ReadReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_ReadReg) referenced from iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
 <LI><a href="#[95]">BSP_I2C1_WriteReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_WriteReg) referenced from iks01a2_env_sensors.o(i.HTS221_0_Probe)
 <LI><a href="#[95]">BSP_I2C1_WriteReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_WriteReg) referenced from iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
 <LI><a href="#[95]">BSP_I2C1_WriteReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_WriteReg) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
 <LI><a href="#[95]">BSP_I2C1_WriteReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_WriteReg) referenced from iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
 <LI><a href="#[95]">BSP_I2C1_WriteReg</a> from stm32f4xx_nucleo_bus.o(i.BSP_I2C1_WriteReg) referenced from iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
 <LI><a href="#[a3]">BUTTON_USER_EXTI_Callback</a> from stm32f4xx_nucleo.o(i.BUTTON_USER_EXTI_Callback) referenced from stm32f4xx_nucleo.o(.constdata)
 <LI><a href="#[51]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[62]">DMA1_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[63]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[64]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[65]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[66]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[67]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[68]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7d]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[81]">DMA2_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[82]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[83]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[84]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[85]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[87]">DMA2_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[88]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[89]">DMA2_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[54]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5d]">EXTI0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7a]">EXTI15_10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5e]">EXTI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5f]">EXTI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[60]">EXTI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[61]">EXTI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6a]">EXTI9_5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5b]">FLASH_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8d]">FPU_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[32]">HTS221_DeInit</a> from hts221.o(i.HTS221_DeInit) referenced 2 times from hts221.o(.data)
 <LI><a href="#[34]">HTS221_GetCapabilities</a> from hts221.o(i.HTS221_GetCapabilities) referenced 2 times from hts221.o(.data)
 <LI><a href="#[36]">HTS221_HUM_Disable</a> from hts221.o(i.HTS221_HUM_Disable) referenced 2 times from hts221.o(.data)
 <LI><a href="#[35]">HTS221_HUM_Enable</a> from hts221.o(i.HTS221_HUM_Enable) referenced 2 times from hts221.o(.data)
 <LI><a href="#[39]">HTS221_HUM_GetHumidity</a> from hts221.o(i.HTS221_HUM_GetHumidity) referenced 2 times from hts221.o(.data)
 <LI><a href="#[37]">HTS221_HUM_GetOutputDataRate</a> from hts221.o(i.HTS221_HUM_GetOutputDataRate) referenced 2 times from hts221.o(.data)
 <LI><a href="#[38]">HTS221_HUM_SetOutputDataRate</a> from hts221.o(i.HTS221_HUM_SetOutputDataRate) referenced 2 times from hts221.o(.data)
 <LI><a href="#[31]">HTS221_Init</a> from hts221.o(i.HTS221_Init) referenced 2 times from hts221.o(.data)
 <LI><a href="#[33]">HTS221_ReadID</a> from hts221.o(i.HTS221_ReadID) referenced 2 times from hts221.o(.data)
 <LI><a href="#[3b]">HTS221_TEMP_Disable</a> from hts221.o(i.HTS221_TEMP_Disable) referenced 2 times from hts221.o(.data)
 <LI><a href="#[3a]">HTS221_TEMP_Enable</a> from hts221.o(i.HTS221_TEMP_Enable) referenced 2 times from hts221.o(.data)
 <LI><a href="#[3c]">HTS221_TEMP_GetOutputDataRate</a> from hts221.o(i.HTS221_TEMP_GetOutputDataRate) referenced 2 times from hts221.o(.data)
 <LI><a href="#[3e]">HTS221_TEMP_GetTemperature</a> from hts221.o(i.HTS221_TEMP_GetTemperature) referenced 2 times from hts221.o(.data)
 <LI><a href="#[3d]">HTS221_TEMP_SetOutputDataRate</a> from hts221.o(i.HTS221_TEMP_SetOutputDataRate) referenced 2 times from hts221.o(.data)
 <LI><a href="#[4f]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[73]">I2C1_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[72]">I2C1_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[75]">I2C2_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[74]">I2C2_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8c]">I2C3_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8b]">I2C3_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[40]">LPS22HB_DeInit</a> from lps22hb.o(i.LPS22HB_DeInit) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[42]">LPS22HB_GetCapabilities</a> from lps22hb.o(i.LPS22HB_GetCapabilities) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[3f]">LPS22HB_Init</a> from lps22hb.o(i.LPS22HB_Init) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[44]">LPS22HB_PRESS_Disable</a> from lps22hb.o(i.LPS22HB_PRESS_Disable) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[43]">LPS22HB_PRESS_Enable</a> from lps22hb.o(i.LPS22HB_PRESS_Enable) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[45]">LPS22HB_PRESS_GetOutputDataRate</a> from lps22hb.o(i.LPS22HB_PRESS_GetOutputDataRate) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[47]">LPS22HB_PRESS_GetPressure</a> from lps22hb.o(i.LPS22HB_PRESS_GetPressure) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[46]">LPS22HB_PRESS_SetOutputDataRate</a> from lps22hb.o(i.LPS22HB_PRESS_SetOutputDataRate) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[41]">LPS22HB_ReadID</a> from lps22hb.o(i.LPS22HB_ReadID) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[49]">LPS22HB_TEMP_Disable</a> from lps22hb.o(i.LPS22HB_TEMP_Disable) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[48]">LPS22HB_TEMP_Enable</a> from lps22hb.o(i.LPS22HB_TEMP_Enable) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[4a]">LPS22HB_TEMP_GetOutputDataRate</a> from lps22hb.o(i.LPS22HB_TEMP_GetOutputDataRate) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[4c]">LPS22HB_TEMP_GetTemperature</a> from lps22hb.o(i.LPS22HB_TEMP_GetTemperature) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[4b]">LPS22HB_TEMP_SetOutputDataRate</a> from lps22hb.o(i.LPS22HB_TEMP_SetOutputDataRate) referenced 2 times from lps22hb.o(.data)
 <LI><a href="#[18]">LSM303AGR_ACC_DeInit</a> from lsm303agr.o(i.LSM303AGR_ACC_DeInit) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[1c]">LSM303AGR_ACC_Disable</a> from lsm303agr.o(i.LSM303AGR_ACC_Disable) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[1b]">LSM303AGR_ACC_Enable</a> from lsm303agr.o(i.LSM303AGR_ACC_Enable) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[22]">LSM303AGR_ACC_GetAxes</a> from lsm303agr.o(i.LSM303AGR_ACC_GetAxes) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[23]">LSM303AGR_ACC_GetAxesRaw</a> from lsm303agr.o(i.LSM303AGR_ACC_GetAxesRaw) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[1a]">LSM303AGR_ACC_GetCapabilities</a> from lsm303agr.o(i.LSM303AGR_ACC_GetCapabilities) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[20]">LSM303AGR_ACC_GetFullScale</a> from lsm303agr.o(i.LSM303AGR_ACC_GetFullScale) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[1e]">LSM303AGR_ACC_GetOutputDataRate</a> from lsm303agr.o(i.LSM303AGR_ACC_GetOutputDataRate) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[1d]">LSM303AGR_ACC_GetSensitivity</a> from lsm303agr.o(i.LSM303AGR_ACC_GetSensitivity) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[17]">LSM303AGR_ACC_Init</a> from lsm303agr.o(i.LSM303AGR_ACC_Init) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[19]">LSM303AGR_ACC_ReadID</a> from lsm303agr.o(i.LSM303AGR_ACC_ReadID) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[21]">LSM303AGR_ACC_SetFullScale</a> from lsm303agr.o(i.LSM303AGR_ACC_SetFullScale) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[1f]">LSM303AGR_ACC_SetOutputDataRate</a> from lsm303agr.o(i.LSM303AGR_ACC_SetOutputDataRate) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[25]">LSM303AGR_MAG_DeInit</a> from lsm303agr.o(i.LSM303AGR_MAG_DeInit) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[29]">LSM303AGR_MAG_Disable</a> from lsm303agr.o(i.LSM303AGR_MAG_Disable) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[28]">LSM303AGR_MAG_Enable</a> from lsm303agr.o(i.LSM303AGR_MAG_Enable) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[2f]">LSM303AGR_MAG_GetAxes</a> from lsm303agr.o(i.LSM303AGR_MAG_GetAxes) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[30]">LSM303AGR_MAG_GetAxesRaw</a> from lsm303agr.o(i.LSM303AGR_MAG_GetAxesRaw) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[27]">LSM303AGR_MAG_GetCapabilities</a> from lsm303agr.o(i.LSM303AGR_MAG_GetCapabilities) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[2d]">LSM303AGR_MAG_GetFullScale</a> from lsm303agr.o(i.LSM303AGR_MAG_GetFullScale) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[2b]">LSM303AGR_MAG_GetOutputDataRate</a> from lsm303agr.o(i.LSM303AGR_MAG_GetOutputDataRate) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[2a]">LSM303AGR_MAG_GetSensitivity</a> from lsm303agr.o(i.LSM303AGR_MAG_GetSensitivity) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[24]">LSM303AGR_MAG_Init</a> from lsm303agr.o(i.LSM303AGR_MAG_Init) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[26]">LSM303AGR_MAG_ReadID</a> from lsm303agr.o(i.LSM303AGR_MAG_ReadID) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[2e]">LSM303AGR_MAG_SetFullScale</a> from lsm303agr.o(i.LSM303AGR_MAG_SetFullScale) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[2c]">LSM303AGR_MAG_SetOutputDataRate</a> from lsm303agr.o(i.LSM303AGR_MAG_SetOutputDataRate) referenced 2 times from lsm303agr.o(.data)
 <LI><a href="#[6]">LSM6DSL_ACC_Disable</a> from lsm6dsl.o(i.LSM6DSL_ACC_Disable) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[5]">LSM6DSL_ACC_Enable</a> from lsm6dsl.o(i.LSM6DSL_ACC_Enable) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[c]">LSM6DSL_ACC_GetAxes</a> from lsm6dsl.o(i.LSM6DSL_ACC_GetAxes) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[d]">LSM6DSL_ACC_GetAxesRaw</a> from lsm6dsl.o(i.LSM6DSL_ACC_GetAxesRaw) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[a]">LSM6DSL_ACC_GetFullScale</a> from lsm6dsl.o(i.LSM6DSL_ACC_GetFullScale) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[8]">LSM6DSL_ACC_GetOutputDataRate</a> from lsm6dsl.o(i.LSM6DSL_ACC_GetOutputDataRate) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[7]">LSM6DSL_ACC_GetSensitivity</a> from lsm6dsl.o(i.LSM6DSL_ACC_GetSensitivity) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[b]">LSM6DSL_ACC_SetFullScale</a> from lsm6dsl.o(i.LSM6DSL_ACC_SetFullScale) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[9]">LSM6DSL_ACC_SetOutputDataRate</a> from lsm6dsl.o(i.LSM6DSL_ACC_SetOutputDataRate) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[2]">LSM6DSL_DeInit</a> from lsm6dsl.o(i.LSM6DSL_DeInit) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[f]">LSM6DSL_GYRO_Disable</a> from lsm6dsl.o(i.LSM6DSL_GYRO_Disable) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[e]">LSM6DSL_GYRO_Enable</a> from lsm6dsl.o(i.LSM6DSL_GYRO_Enable) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[15]">LSM6DSL_GYRO_GetAxes</a> from lsm6dsl.o(i.LSM6DSL_GYRO_GetAxes) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[16]">LSM6DSL_GYRO_GetAxesRaw</a> from lsm6dsl.o(i.LSM6DSL_GYRO_GetAxesRaw) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[13]">LSM6DSL_GYRO_GetFullScale</a> from lsm6dsl.o(i.LSM6DSL_GYRO_GetFullScale) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[11]">LSM6DSL_GYRO_GetOutputDataRate</a> from lsm6dsl.o(i.LSM6DSL_GYRO_GetOutputDataRate) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[10]">LSM6DSL_GYRO_GetSensitivity</a> from lsm6dsl.o(i.LSM6DSL_GYRO_GetSensitivity) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[14]">LSM6DSL_GYRO_SetFullScale</a> from lsm6dsl.o(i.LSM6DSL_GYRO_SetFullScale) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[12]">LSM6DSL_GYRO_SetOutputDataRate</a> from lsm6dsl.o(i.LSM6DSL_GYRO_SetOutputDataRate) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[4]">LSM6DSL_GetCapabilities</a> from lsm6dsl.o(i.LSM6DSL_GetCapabilities) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[1]">LSM6DSL_Init</a> from lsm6dsl.o(i.LSM6DSL_Init) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[3]">LSM6DSL_ReadID</a> from lsm6dsl.o(i.LSM6DSL_ReadID) referenced 2 times from lsm6dsl.o(.data)
 <LI><a href="#[50]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4e]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[86]">OTG_FS_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7c]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[58]">PVD_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[55]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5c]">RCC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7b]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5a]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[9b]">ReadAccRegWrap</a> from lsm303agr.o(i.ReadAccRegWrap) referenced from lsm303agr.o(i.LSM303AGR_ACC_RegisterBusIO)
 <LI><a href="#[9d]">ReadMagRegWrap</a> from lsm303agr.o(i.ReadMagRegWrap) referenced from lsm303agr.o(i.LSM303AGR_MAG_RegisterBusIO)
 <LI><a href="#[97]">ReadRegWrap</a> from hts221.o(i.ReadRegWrap) referenced from hts221.o(i.HTS221_RegisterBusIO)
 <LI><a href="#[99]">ReadRegWrap</a> from lps22hb.o(i.ReadRegWrap) referenced from lps22hb.o(i.LPS22HB_RegisterBusIO)
 <LI><a href="#[9f]">ReadRegWrap</a> from lsm6dsl.o(i.ReadRegWrap) referenced from lsm6dsl.o(i.LSM6DSL_RegisterBusIO)
 <LI><a href="#[4d]">Reset_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7e]">SDIO_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[76]">SPI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[77]">SPI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[80]">SPI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8e]">SPI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[53]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[56]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[90]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[59]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6b]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6e]">TIM1_CC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6d]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6c]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[6f]">TIM2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[70]">TIM3_IRQHandler</a> from stm32f4xx_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[71]">TIM4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7f]">TIM5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[78]">USART1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[79]">USART2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8a]">USART6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[52]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[57]">WWDG_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[9c]">WriteAccRegWrap</a> from lsm303agr.o(i.WriteAccRegWrap) referenced from lsm303agr.o(i.LSM303AGR_ACC_RegisterBusIO)
 <LI><a href="#[9e]">WriteMagRegWrap</a> from lsm303agr.o(i.WriteMagRegWrap) referenced from lsm303agr.o(i.LSM303AGR_MAG_RegisterBusIO)
 <LI><a href="#[98]">WriteRegWrap</a> from hts221.o(i.WriteRegWrap) referenced from hts221.o(i.HTS221_RegisterBusIO)
 <LI><a href="#[9a]">WriteRegWrap</a> from lps22hb.o(i.WriteRegWrap) referenced from lps22hb.o(i.LPS22HB_RegisterBusIO)
 <LI><a href="#[a0]">WriteRegWrap</a> from lsm6dsl.o(i.WriteRegWrap) referenced from lsm6dsl.o(i.LSM6DSL_RegisterBusIO)
 <LI><a href="#[91]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[a2]">_snputc</a> from printf8.o(i._snputc) referenced from printf8.o(i.__0snprintf$8)
 <LI><a href="#[a1]">fputc</a> from stm32f4xx_nucleo.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[8f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[91]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[19b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ba]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[19c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[19d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[19e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[19f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1a0]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[16b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1a3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_trunc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b0]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_trunc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
</UL>

<P><STRONG><a name="[192]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAngles
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAngles
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1a4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1a5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1a6]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1a7]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[1a8]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ae]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[18d]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1a9]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[b9]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_trunc
</UL>

<P><STRONG><a name="[1aa]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_trunc
</UL>

<P><STRONG><a name="[18c]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_trunc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[a5]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1ab]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1ac]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>Accelero_Sensor_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sensor.o(i.Accelero_Sensor_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Accelero_Sensor_Handler &rArr; IKS01A2_MOTION_SENSOR_GetAxes
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_GetAxes
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
</UL>

<P><STRONG><a name="[bd]"></a>BSP_COM_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4xx_nucleo.o(i.BSP_COM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_COM_Init &rArr; USART2_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[96]"></a>BSP_GetTick</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_nucleo_bus.o(i.BSP_GetTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GetTick
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 5]<UL><LI> iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
<LI> iks01a2_env_sensors.o(i.HTS221_0_Probe)
</UL>
<P><STRONG><a name="[93]"></a>BSP_I2C1_DeInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f4xx_nucleo_bus.o(i.BSP_I2C1_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BSP_I2C1_DeInit &rArr; I2C1_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_MspDeInit
</UL>
<BR>[Address Reference Count : 5]<UL><LI> iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
<LI> iks01a2_env_sensors.o(i.HTS221_0_Probe)
</UL>
<P><STRONG><a name="[92]"></a>BSP_I2C1_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_nucleo_bus.o(i.BSP_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_I2C1_Init &rArr; I2C1_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_MspInit
</UL>
<BR>[Address Reference Count : 5]<UL><LI> iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
<LI> iks01a2_env_sensors.o(i.HTS221_0_Probe)
</UL>
<P><STRONG><a name="[94]"></a>BSP_I2C1_ReadReg</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, stm32f4xx_nucleo_bus.o(i.BSP_I2C1_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BSP_I2C1_ReadReg &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetError
</UL>
<BR>[Address Reference Count : 5]<UL><LI> iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
<LI> iks01a2_env_sensors.o(i.HTS221_0_Probe)
</UL>
<P><STRONG><a name="[95]"></a>BSP_I2C1_WriteReg</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, stm32f4xx_nucleo_bus.o(i.BSP_I2C1_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BSP_I2C1_WriteReg &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetError
</UL>
<BR>[Address Reference Count : 5]<UL><LI> iks01a2_env_sensors.o(i.LPS22HB_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe)
<LI> iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe)
<LI> iks01a2_env_sensors.o(i.HTS221_0_Probe)
</UL>
<P><STRONG><a name="[ca]"></a>BSP_LED_Init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[cd]"></a>BSP_LED_Off</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(i.BSP_LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
</UL>

<P><STRONG><a name="[ce]"></a>BSP_LED_On</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(i.BSP_LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
</UL>

<P><STRONG><a name="[d6]"></a>BSP_PB_Callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_x-cube-mems1.o(i.BSP_PB_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_USER_EXTI_Callback
</UL>

<P><STRONG><a name="[cf]"></a>BSP_PB_GetState</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(i.BSP_PB_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PB_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[d1]"></a>BSP_PB_Init</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, stm32f4xx_nucleo.o(i.BSP_PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_PB_Init &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_EXTI_RegisterCallback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_EXTI_GetHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[51]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[169]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[d7]"></a>Gyro_Sensor_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sensor.o(i.Gyro_Sensor_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Gyro_Sensor_Handler &rArr; IKS01A2_MOTION_SENSOR_GetAxes
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_GetAxes
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
</UL>

<P><STRONG><a name="[d8]"></a>HAL_CRC_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRC_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[d9]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, crc.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[d2]"></a>HAL_EXTI_GetHandle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_exti.o(i.HAL_EXTI_GetHandle))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[d3]"></a>HAL_EXTI_RegisterCallback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_exti.o(i.HAL_EXTI_RegisterCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_EXTI_RegisterCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[11b]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 282 bytes, Stack size 20 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_MspDeInit
</UL>

<P><STRONG><a name="[cb]"></a>HAL_GPIO_Init</STRONG> (Thumb, 436 bytes, Stack size 24 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_MspInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_MspInit
</UL>

<P><STRONG><a name="[d0]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
</UL>

<P><STRONG><a name="[cc]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
</UL>

<P><STRONG><a name="[c0]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GetTick
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[c6]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c_ex.o(i.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_Init
</UL>

<P><STRONG><a name="[c2]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_DeInit
</UL>

<P><STRONG><a name="[c8]"></a>HAL_I2C_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_GetError))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_WriteReg
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_ReadReg
</UL>

<P><STRONG><a name="[c3]"></a>HAL_I2C_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_Init
</UL>

<P><STRONG><a name="[db]"></a>HAL_I2C_Init</STRONG> (Thumb, 422 bytes, Stack size 16 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_I2C_Init &rArr; HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[c7]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 744 bytes, Stack size 48 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_ReadReg
</UL>

<P><STRONG><a name="[c9]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 348 bytes, Stack size 48 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_WriteReg
</UL>

<P><STRONG><a name="[da]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[dc]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[177]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e4]"></a>HAL_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[e7]"></a>HAL_MspInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d5]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[d4]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[e5]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[eb]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ed]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[dd]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[ee]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[ec]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[ef]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1086 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[e8]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[fd]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[ff]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[174]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[f0]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[f1]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[197]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_init
</UL>

<P><STRONG><a name="[f3]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[f9]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[f8]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[fa]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[fb]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[fc]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, sensor.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_ReadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[fe]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[101]"></a>HAL_UART_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[102]"></a>HAL_UART_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[104]"></a>HAL_UART_Transmit</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[32]"></a>HTS221_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hts221.o(i.HTS221_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HTS221_DeInit &rArr; HTS221_TEMP_Disable &rArr; hts221_power_on_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_Disable
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>HTS221_GetCapabilities</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hts221.o(i.HTS221_GetCapabilities))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>HTS221_HUM_Disable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hts221.o(i.HTS221_HUM_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HTS221_HUM_Disable &rArr; hts221_power_on_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>HTS221_HUM_Enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hts221.o(i.HTS221_HUM_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HTS221_HUM_Enable &rArr; hts221_power_on_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>HTS221_HUM_GetHumidity</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, hts221.o(i.HTS221_HUM_GetHumidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_HUM_GetHumidity &rArr; hts221_humidity_raw_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linear_Interpolation
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_humidity_raw_get
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_rh_point_1_get
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_rh_point_0_get
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_adc_point_1_get
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_adc_point_0_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>HTS221_HUM_GetOutputDataRate</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221.o(i.HTS221_HUM_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HTS221_HUM_GetOutputDataRate &rArr; HTS221_GetOutputDataRate &rArr; hts221_data_rate_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_GetOutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>HTS221_HUM_SetOutputDataRate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221.o(i.HTS221_HUM_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HTS221_HUM_SetOutputDataRate &rArr; HTS221_SetOutputDataRate &rArr; hts221_data_rate_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_SetOutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>HTS221_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hts221.o(i.HTS221_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HTS221_Init &rArr; HTS221_Initialize &rArr; HTS221_SetOutputDataRate &rArr; hts221_data_rate_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>HTS221_ReadID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221.o(i.HTS221_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HTS221_ReadID &rArr; hts221_device_id_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_device_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[107]"></a>HTS221_RegisterBusIO</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hts221.o(i.HTS221_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HTS221_RegisterBusIO
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_0_Probe
</UL>

<P><STRONG><a name="[3b]"></a>HTS221_TEMP_Disable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hts221.o(i.HTS221_TEMP_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HTS221_TEMP_Disable &rArr; hts221_power_on_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>HTS221_TEMP_Enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hts221.o(i.HTS221_TEMP_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HTS221_TEMP_Enable &rArr; hts221_power_on_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>HTS221_TEMP_GetOutputDataRate</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, hts221.o(i.HTS221_TEMP_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HTS221_TEMP_GetOutputDataRate &rArr; HTS221_GetOutputDataRate &rArr; hts221_data_rate_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_GetOutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>HTS221_TEMP_GetTemperature</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, hts221.o(i.HTS221_TEMP_GetTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HTS221_TEMP_GetTemperature &rArr; hts221_temp_deg_point_1_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Linear_Interpolation
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temperature_raw_get
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_deg_point_1_get
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_deg_point_0_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_adc_point_1_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_adc_point_0_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>HTS221_TEMP_SetOutputDataRate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hts221.o(i.HTS221_TEMP_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HTS221_TEMP_SetOutputDataRate &rArr; HTS221_SetOutputDataRate &rArr; hts221_data_rate_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_SetOutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[171]"></a>IKS01A2_ENV_SENSOR_GetCapabilities</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, iks01a2_env_sensors.o(i.IKS01A2_ENV_SENSOR_GetCapabilities))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IKS01A2_ENV_SENSOR_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[11e]"></a>IKS01A2_ENV_SENSOR_Init</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, iks01a2_env_sensors.o(i.IKS01A2_ENV_SENSOR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = IKS01A2_ENV_SENSOR_Init &rArr; LPS22HB_0_Probe &rArr; LPS22HB_RegisterBusIO &rArr; LPS22HB_Write_Reg &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_0_Probe
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_0_Probe
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[bc]"></a>IKS01A2_MOTION_SENSOR_GetAxes</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, iks01a2_motion_sensors.o(i.IKS01A2_MOTION_SENSOR_GetAxes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IKS01A2_MOTION_SENSOR_GetAxes
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gyro_Sensor_Handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelero_Sensor_Handler
</UL>

<P><STRONG><a name="[16d]"></a>IKS01A2_MOTION_SENSOR_GetCapabilities</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, iks01a2_motion_sensors.o(i.IKS01A2_MOTION_SENSOR_GetCapabilities))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IKS01A2_MOTION_SENSOR_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[120]"></a>IKS01A2_MOTION_SENSOR_Init</STRONG> (Thumb, 364 bytes, Stack size 56 bytes, iks01a2_motion_sensors.o(i.IKS01A2_MOTION_SENSOR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = IKS01A2_MOTION_SENSOR_Init &rArr; LSM6DSL_0_Probe &rArr; LSM6DSL_RegisterBusIO &rArr; LSM6DSL_Write_Reg &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_0_Probe
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_0_Probe
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_0_Probe
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[166]"></a>IMU_proc</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, sensor.o(i.IMU_proc))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
</UL>

<P><STRONG><a name="[40]"></a>LPS22HB_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LPS22HB_DeInit &rArr; LPS22HB_TEMP_Disable &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_Disable
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>LPS22HB_GetCapabilities</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lps22hb.o(i.LPS22HB_GetCapabilities))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>LPS22HB_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LPS22HB_Init &rArr; LPS22HB_Initialize &rArr; lps22hb_low_power_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>LPS22HB_PRESS_Disable</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_PRESS_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_PRESS_Disable &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>LPS22HB_PRESS_Enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_PRESS_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_PRESS_Enable &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>LPS22HB_PRESS_GetOutputDataRate</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_PRESS_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LPS22HB_PRESS_GetOutputDataRate &rArr; LPS22HB_GetOutputDataRate &rArr; lps22hb_data_rate_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_GetOutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>LPS22HB_PRESS_GetPressure</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_PRESS_GetPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_PRESS_GetPressure &rArr; lps22hb_pressure_raw_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_pressure_raw_get
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_from_lsb_to_hpa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>LPS22HB_PRESS_SetOutputDataRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_PRESS_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LPS22HB_PRESS_SetOutputDataRate &rArr; LPS22HB_SetOutputDataRate_When_Enabled &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SetOutputDataRate_When_Enabled
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SetOutputDataRate_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>LPS22HB_ReadID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_ReadID &rArr; lps22hb_device_id_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_device_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[124]"></a>LPS22HB_RegisterBusIO</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lps22hb.o(i.LPS22HB_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPS22HB_RegisterBusIO &rArr; LPS22HB_Write_Reg &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_0_Probe
</UL>

<P><STRONG><a name="[49]"></a>LPS22HB_TEMP_Disable</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_TEMP_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_TEMP_Disable &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>LPS22HB_TEMP_Enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_TEMP_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_TEMP_Enable &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>LPS22HB_TEMP_GetOutputDataRate</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_TEMP_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LPS22HB_TEMP_GetOutputDataRate &rArr; LPS22HB_GetOutputDataRate &rArr; lps22hb_data_rate_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_GetOutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>LPS22HB_TEMP_GetTemperature</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_TEMP_GetTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_TEMP_GetTemperature &rArr; lps22hb_temperature_raw_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_temperature_raw_get
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_from_lsb_to_degc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>LPS22HB_TEMP_SetOutputDataRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps22hb.o(i.LPS22HB_TEMP_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LPS22HB_TEMP_SetOutputDataRate &rArr; LPS22HB_SetOutputDataRate_When_Enabled &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SetOutputDataRate_When_Enabled
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SetOutputDataRate_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(.data)
</UL>
<P><STRONG><a name="[132]"></a>LPS22HB_Write_Reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lps22hb.o(i.LPS22HB_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LPS22HB_Write_Reg &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_RegisterBusIO
</UL>

<P><STRONG><a name="[18]"></a>LSM303AGR_ACC_DeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_ACC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM303AGR_ACC_DeInit &rArr; LSM303AGR_ACC_Disable &rArr; lsm303agr_xl_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>LSM303AGR_ACC_Disable</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_ACC_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_ACC_Disable &rArr; lsm303agr_xl_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_set
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>LSM303AGR_ACC_Enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_ACC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_ACC_Enable &rArr; lsm303agr_xl_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>LSM303AGR_ACC_GetAxes</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetAxes))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LSM303AGR_ACC_GetAxes &rArr; LSM303AGR_ACC_GetSensitivity &rArr; LSM303AGR_ACC_GetSensitivityNM &rArr; lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivity
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetAxesRaw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>LSM303AGR_ACC_GetAxesRaw</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetAxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LSM303AGR_ACC_GetAxesRaw &rArr; lsm303agr_xl_operating_mode_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_operating_mode_get
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_acceleration_raw_get
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetAxes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>LSM303AGR_ACC_GetCapabilities</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetCapabilities))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>LSM303AGR_ACC_GetFullScale</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_GetFullScale &rArr; lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>LSM303AGR_ACC_GetOutputDataRate</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_GetOutputDataRate &rArr; lsm303agr_xl_operating_mode_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_operating_mode_get
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>LSM303AGR_ACC_GetSensitivity</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetSensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LSM303AGR_ACC_GetSensitivity &rArr; LSM303AGR_ACC_GetSensitivityNM &rArr; lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivityNM
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivityLP
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivityHR
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_operating_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetAxes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>LSM303AGR_ACC_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_ACC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_ACC_Init &rArr; lsm303agr_xl_full_scale_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_set
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_fifo_mode_set
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_set
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_block_data_update_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>LSM303AGR_ACC_ReadID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lsm303agr.o(i.LSM303AGR_ACC_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_ACC_ReadID &rArr; lsm303agr_xl_device_id_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_device_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[136]"></a>LSM303AGR_ACC_RegisterBusIO</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_RegisterBusIO &rArr; LSM303AGR_ACC_Write_Reg &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_0_Probe
</UL>

<P><STRONG><a name="[21]"></a>LSM303AGR_ACC_SetFullScale</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm303agr.o(i.LSM303AGR_ACC_SetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM303AGR_ACC_SetFullScale &rArr; lsm303agr_xl_full_scale_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>LSM303AGR_ACC_SetOutputDataRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm303agr.o(i.LSM303AGR_ACC_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LSM303AGR_ACC_SetOutputDataRate &rArr; LSM303AGR_ACC_SetOutputDataRate_When_Enabled &rArr; lsm303agr_xl_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_SetOutputDataRate_When_Enabled
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_SetOutputDataRate_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[143]"></a>LSM303AGR_ACC_Write_Reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LSM303AGR_ACC_Write_Reg &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_RegisterBusIO
</UL>

<P><STRONG><a name="[25]"></a>LSM303AGR_MAG_DeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_MAG_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM303AGR_MAG_DeInit &rArr; LSM303AGR_MAG_Disable &rArr; lsm303agr_mag_operating_mode_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>LSM303AGR_MAG_Disable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_MAG_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_MAG_Disable &rArr; lsm303agr_mag_operating_mode_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_operating_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>LSM303AGR_MAG_Enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_MAG_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_MAG_Enable &rArr; lsm303agr_mag_operating_mode_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_operating_mode_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>LSM303AGR_MAG_GetAxes</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_MAG_GetAxes))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM303AGR_MAG_GetAxes &rArr; lsm303agr_magnetic_raw_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_GetSensitivity
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_magnetic_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>LSM303AGR_MAG_GetAxesRaw</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_MAG_GetAxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM303AGR_MAG_GetAxesRaw &rArr; lsm303agr_magnetic_raw_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_magnetic_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>LSM303AGR_MAG_GetCapabilities</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lsm303agr.o(i.LSM303AGR_MAG_GetCapabilities))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>LSM303AGR_MAG_GetFullScale</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lsm303agr.o(i.LSM303AGR_MAG_GetFullScale))
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>LSM303AGR_MAG_GetOutputDataRate</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_MAG_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_MAG_GetOutputDataRate &rArr; lsm303agr_mag_data_rate_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_data_rate_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>LSM303AGR_MAG_GetSensitivity</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lsm303agr.o(i.LSM303AGR_MAG_GetSensitivity))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_GetAxes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>LSM303AGR_MAG_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lsm303agr.o(i.LSM303AGR_MAG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_MAG_Init &rArr; lsm303agr_mag_self_test_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_self_test_set
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_operating_mode_set
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_data_rate_set
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_block_data_update_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>LSM303AGR_MAG_ReadID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lsm303agr.o(i.LSM303AGR_MAG_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303AGR_MAG_ReadID &rArr; lsm303agr_mag_device_id_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_device_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[147]"></a>LSM303AGR_MAG_RegisterBusIO</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, lsm303agr.o(i.LSM303AGR_MAG_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM303AGR_MAG_RegisterBusIO &rArr; lsm303agr_mag_i2c_interface_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_i2c_interface_set
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_0_Probe
</UL>

<P><STRONG><a name="[2e]"></a>LSM303AGR_MAG_SetFullScale</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lsm303agr.o(i.LSM303AGR_MAG_SetFullScale))
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>LSM303AGR_MAG_SetOutputDataRate</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_MAG_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_MAG_SetOutputDataRate &rArr; lsm303agr_mag_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_data_rate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>LSM6DSL_ACC_Disable</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_ACC_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM6DSL_ACC_Disable &rArr; lsm6dsl_xl_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_set
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>LSM6DSL_ACC_Enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_ACC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM6DSL_ACC_Enable &rArr; lsm6dsl_xl_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>LSM6DSL_ACC_GetAxes</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_ACC_GetAxes))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LSM6DSL_ACC_GetAxes &rArr; LSM6DSL_ACC_GetSensitivity &rArr; lsm6dsl_xl_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetSensitivity
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_acceleration_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>LSM6DSL_ACC_GetAxesRaw</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_ACC_GetAxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM6DSL_ACC_GetAxesRaw &rArr; lsm6dsl_acceleration_raw_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_acceleration_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>LSM6DSL_ACC_GetFullScale</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_ACC_GetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_ACC_GetFullScale &rArr; lsm6dsl_xl_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>LSM6DSL_ACC_GetOutputDataRate</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_ACC_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_ACC_GetOutputDataRate &rArr; lsm6dsl_xl_data_rate_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>LSM6DSL_ACC_GetSensitivity</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_ACC_GetSensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_ACC_GetSensitivity &rArr; lsm6dsl_xl_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetAxes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>LSM6DSL_ACC_SetFullScale</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_ACC_SetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM6DSL_ACC_SetFullScale &rArr; lsm6dsl_xl_full_scale_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>LSM6DSL_ACC_SetOutputDataRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_ACC_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LSM6DSL_ACC_SetOutputDataRate &rArr; LSM6DSL_ACC_SetOutputDataRate_When_Enabled &rArr; lsm6dsl_xl_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_SetOutputDataRate_When_Enabled
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_SetOutputDataRate_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>LSM6DSL_DeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM6DSL_DeInit &rArr; LSM6DSL_GYRO_Disable &rArr; lsm6dsl_gy_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_Disable
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>LSM6DSL_GYRO_Disable</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM6DSL_GYRO_Disable &rArr; lsm6dsl_gy_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_set
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>LSM6DSL_GYRO_Enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM6DSL_GYRO_Enable &rArr; lsm6dsl_gy_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>LSM6DSL_GYRO_GetAxes</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_GetAxes))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LSM6DSL_GYRO_GetAxes &rArr; LSM6DSL_GYRO_GetSensitivity &rArr; lsm6dsl_gy_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetSensitivity
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_angular_rate_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>LSM6DSL_GYRO_GetAxesRaw</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_GetAxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM6DSL_GYRO_GetAxesRaw &rArr; lsm6dsl_angular_rate_raw_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_angular_rate_raw_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>LSM6DSL_GYRO_GetFullScale</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_GetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_GYRO_GetFullScale &rArr; lsm6dsl_gy_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>LSM6DSL_GYRO_GetOutputDataRate</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_GYRO_GetOutputDataRate &rArr; lsm6dsl_gy_data_rate_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>LSM6DSL_GYRO_GetSensitivity</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_GetSensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_GYRO_GetSensitivity &rArr; lsm6dsl_gy_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_get
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetAxes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>LSM6DSL_GYRO_SetFullScale</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_SetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LSM6DSL_GYRO_SetFullScale &rArr; lsm6dsl_gy_full_scale_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>LSM6DSL_GYRO_SetOutputDataRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LSM6DSL_GYRO_SetOutputDataRate &rArr; LSM6DSL_GYRO_SetOutputDataRate_When_Enabled &rArr; lsm6dsl_gy_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_SetOutputDataRate_When_Enabled
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_SetOutputDataRate_When_Disabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>LSM6DSL_GetCapabilities</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lsm6dsl.o(i.LSM6DSL_GetCapabilities))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>LSM6DSL_Init</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, lsm6dsl.o(i.LSM6DSL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM6DSL_Init &rArr; lsm6dsl_xl_full_scale_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_set
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_set
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_set
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_set
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_fifo_mode_set
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_block_data_update_set
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_auto_increment_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>LSM6DSL_ReadID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lsm6dsl.o(i.LSM6DSL_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM6DSL_ReadID &rArr; lsm6dsl_device_id_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_device_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_0_Probe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(.data)
</UL>
<P><STRONG><a name="[150]"></a>LSM6DSL_RegisterBusIO</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_RegisterBusIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_RegisterBusIO &rArr; LSM6DSL_Write_Reg &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Write_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_0_Probe
</UL>

<P><STRONG><a name="[163]"></a>LSM6DSL_Write_Reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_Write_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LSM6DSL_Write_Reg &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_RegisterBusIO
</UL>

<P><STRONG><a name="[165]"></a>Lib_Process</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, sensor.o(i.Lib_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Lib_Process &rArr; MahonyAHRSupdateIMU &rArr; calculateAngles &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gyro_Sensor_Handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelero_Sensor_Handler
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MahonyAHRSupdateIMU
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>Lib_ReadRequest</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensor.o(i.Lib_ReadRequest))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[168]"></a>MX_CRC_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, crc.o(i.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRC_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16a]"></a>MX_GPIO_Init</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>MX_I2C1_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32f4xx_nucleo_bus.o(i.MX_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MX_I2C1_Init &rArr; HAL_I2C_Init &rArr; HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_Init
</UL>

<P><STRONG><a name="[172]"></a>MX_MEMS_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_x-cube-mems1.o(i.MX_MEMS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = MX_MEMS_Init &rArr; MX_IKS01A2_DataLogTerminal_Init &rArr; floatToInt &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[173]"></a>MX_TIM3_Init</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, tim.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f4xx_nucleo.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_COM_Init
</UL>

<P><STRONG><a name="[167]"></a>MahonyAHRSupdateIMU</STRONG> (Thumb, 848 bytes, Stack size 72 bytes, mahonyahrs.o(i.MahonyAHRSupdateIMU))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = MahonyAHRSupdateIMU &rArr; calculateAngles &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAngles
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
</UL>

<P><STRONG><a name="[50]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[178]"></a>SystemClock_Config</STRONG> (Thumb, 178 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>TIM3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[f2]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[f4]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[196]"></a>TM_AHRSIMU_Init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tm_stm32_ahrs_imu.o(i.TM_AHRSIMU_Init))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_init
</UL>

<P><STRONG><a name="[52]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[179]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1ae]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[16f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[17b]"></a>__0snprintf$8</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, printf8.o(i.__0snprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1af]"></a>__1snprintf$8</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printf8.o(i.__0snprintf$8), UNUSED)

<P><STRONG><a name="[16e]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printf8.o(i.__0snprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[180]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[17c]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAngles
</UL>

<P><STRONG><a name="[185]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[186]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAngles
</UL>

<P><STRONG><a name="[189]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
</UL>

<P><STRONG><a name="[18e]"></a>__hardfp_trunc</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, trunc.o(i.__hardfp_trunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __hardfp_trunc &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
</UL>

<P><STRONG><a name="[182]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[18a]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[17d]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[187]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[17f]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[18b]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[181]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1b0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1b1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1b2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[17e]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[188]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[176]"></a>calculateAngles</STRONG> (Thumb, 536 bytes, Stack size 64 bytes, tm_stm32_ahrs_imu.o(i.calculateAngles))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = calculateAngles &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MahonyAHRSupdateIMU
</UL>

<P><STRONG><a name="[183]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[a1]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, stm32f4xx_nucleo.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[113]"></a>hts221_block_data_update_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, hts221_reg.o(i.hts221_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hts221_block_data_update_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_write_reg
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Initialize
</UL>

<P><STRONG><a name="[109]"></a>hts221_data_rate_get</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, hts221_reg.o(i.hts221_data_rate_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hts221_data_rate_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_GetOutputDataRate
</UL>

<P><STRONG><a name="[115]"></a>hts221_data_rate_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, hts221_reg.o(i.hts221_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hts221_data_rate_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_write_reg
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_SetOutputDataRate
</UL>

<P><STRONG><a name="[114]"></a>hts221_device_id_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_device_id_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadID
</UL>

<P><STRONG><a name="[10b]"></a>hts221_hum_adc_point_0_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_hum_adc_point_0_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_hum_adc_point_0_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetHumidity
</UL>

<P><STRONG><a name="[10d]"></a>hts221_hum_adc_point_1_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_hum_adc_point_1_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_hum_adc_point_1_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetHumidity
</UL>

<P><STRONG><a name="[10c]"></a>hts221_hum_rh_point_0_get</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_hum_rh_point_0_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_hum_rh_point_0_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetHumidity
</UL>

<P><STRONG><a name="[10e]"></a>hts221_hum_rh_point_1_get</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_hum_rh_point_1_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_hum_rh_point_1_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetHumidity
</UL>

<P><STRONG><a name="[10f]"></a>hts221_humidity_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_humidity_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_humidity_raw_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetHumidity
</UL>

<P><STRONG><a name="[10a]"></a>hts221_power_on_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, hts221_reg.o(i.hts221_power_on_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hts221_power_on_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_write_reg
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_Enable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_Disable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_Enable
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_Disable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Initialize
</UL>

<P><STRONG><a name="[193]"></a>hts221_read_reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, hts221_reg.o(i.hts221_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temperature_raw_get
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_deg_point_1_get
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_deg_point_0_get
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_adc_point_1_get
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_temp_adc_point_0_get
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_humidity_raw_get
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_rh_point_1_get
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_rh_point_0_get
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_adc_point_1_get
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_hum_adc_point_0_get
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_device_id_get
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_data_rate_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_data_rate_get
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_block_data_update_set
</UL>

<P><STRONG><a name="[116]"></a>hts221_temp_adc_point_0_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_temp_adc_point_0_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_temp_adc_point_0_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[118]"></a>hts221_temp_adc_point_1_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_temp_adc_point_1_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_temp_adc_point_1_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[117]"></a>hts221_temp_deg_point_0_get</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, hts221_reg.o(i.hts221_temp_deg_point_0_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hts221_temp_deg_point_0_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[119]"></a>hts221_temp_deg_point_1_get</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, hts221_reg.o(i.hts221_temp_deg_point_1_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hts221_temp_deg_point_1_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[11a]"></a>hts221_temperature_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hts221_reg.o(i.hts221_temperature_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hts221_temperature_raw_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[194]"></a>hts221_write_reg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, hts221_reg.o(i.hts221_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hts221_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_data_rate_set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_block_data_update_set
</UL>

<P><STRONG><a name="[175]"></a>invSqrt</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, mahonyahrs.o(i.invSqrt))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MahonyAHRSupdateIMU
</UL>

<P><STRONG><a name="[195]"></a>lib_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sensor.o(i.lib_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lib_init
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_AHRSIMU_Init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12c]"></a>lps22hb_auto_add_inc_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_auto_add_inc_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hb_auto_add_inc_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_write_reg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[12b]"></a>lps22hb_block_data_update_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hb_block_data_update_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_write_reg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[126]"></a>lps22hb_data_rate_get</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_data_rate_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hb_data_rate_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_Disable
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_Disable
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SetOutputDataRate_When_Enabled
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_GetOutputDataRate
</UL>

<P><STRONG><a name="[129]"></a>lps22hb_data_rate_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_write_reg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_Enable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_Disable
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_Enable
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_Disable
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_SetOutputDataRate_When_Enabled
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[131]"></a>lps22hb_device_id_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps22hb_reg.o(i.lps22hb_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lps22hb_device_id_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadID
</UL>

<P><STRONG><a name="[134]"></a>lps22hb_from_lsb_to_degc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lps22hb_reg.o(i.lps22hb_from_lsb_to_degc))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[12e]"></a>lps22hb_from_lsb_to_hpa</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lps22hb_reg.o(i.lps22hb_from_lsb_to_hpa))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_GetPressure
</UL>

<P><STRONG><a name="[12a]"></a>lps22hb_low_pass_filter_mode_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_low_pass_filter_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hb_low_pass_filter_mode_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_write_reg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[128]"></a>lps22hb_low_power_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_low_power_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lps22hb_low_power_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_write_reg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Initialize
</UL>

<P><STRONG><a name="[12d]"></a>lps22hb_pressure_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps22hb_reg.o(i.lps22hb_pressure_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lps22hb_pressure_raw_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_GetPressure
</UL>

<P><STRONG><a name="[198]"></a>lps22hb_read_reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_temperature_raw_get
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_pressure_raw_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_low_power_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_low_pass_filter_mode_set
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_device_id_get
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_get
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_block_data_update_set
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_auto_add_inc_set
</UL>

<P><STRONG><a name="[133]"></a>lps22hb_temperature_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lps22hb_reg.o(i.lps22hb_temperature_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lps22hb_temperature_raw_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_GetTemperature
</UL>

<P><STRONG><a name="[135]"></a>lps22hb_write_reg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lps22hb_reg.o(i.lps22hb_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lps22hb_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Write_Reg
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_low_power_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_low_pass_filter_mode_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_block_data_update_set
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_auto_add_inc_set
</UL>

<P><STRONG><a name="[13a]"></a>lsm303agr_acceleration_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm303agr_reg.o(i.lsm303agr_acceleration_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm303agr_acceleration_raw_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetAxesRaw
</UL>

<P><STRONG><a name="[14b]"></a>lsm303agr_mag_block_data_update_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_mag_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_mag_block_data_update_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Init
</UL>

<P><STRONG><a name="[14a]"></a>lsm303agr_mag_data_rate_get</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_mag_data_rate_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_mag_data_rate_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_GetOutputDataRate
</UL>

<P><STRONG><a name="[14c]"></a>lsm303agr_mag_data_rate_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_mag_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_mag_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_SetOutputDataRate
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Init
</UL>

<P><STRONG><a name="[14e]"></a>lsm303agr_mag_device_id_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm303agr_reg.o(i.lsm303agr_mag_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm303agr_mag_device_id_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadID
</UL>

<P><STRONG><a name="[14f]"></a>lsm303agr_mag_i2c_interface_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_mag_i2c_interface_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_mag_i2c_interface_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_RegisterBusIO
</UL>

<P><STRONG><a name="[148]"></a>lsm303agr_mag_operating_mode_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_mag_operating_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_mag_operating_mode_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Enable
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Disable
</UL>

<P><STRONG><a name="[14d]"></a>lsm303agr_mag_self_test_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_mag_self_test_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_mag_self_test_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_Init
</UL>

<P><STRONG><a name="[149]"></a>lsm303agr_magnetic_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm303agr_reg.o(i.lsm303agr_magnetic_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm303agr_magnetic_raw_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_GetAxesRaw
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_GetAxes
</UL>

<P><STRONG><a name="[199]"></a>lsm303agr_read_reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_operating_mode_get
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_set
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_get
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_fifo_mode_set
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_device_id_get
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_set
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_get
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_block_data_update_set
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_magnetic_raw_get
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_self_test_set
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_operating_mode_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_i2c_interface_set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_device_id_get
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_data_rate_set
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_data_rate_get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_block_data_update_set
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_acceleration_raw_get
</UL>

<P><STRONG><a name="[146]"></a>lsm303agr_write_reg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lsm303agr_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Write_Reg
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_set
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_fifo_mode_set
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_set
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_block_data_update_set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_self_test_set
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_operating_mode_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_i2c_interface_set
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_data_rate_set
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_mag_block_data_update_set
</UL>

<P><STRONG><a name="[13f]"></a>lsm303agr_xl_block_data_update_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_block_data_update_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Init
</UL>

<P><STRONG><a name="[137]"></a>lsm303agr_xl_data_rate_get</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_data_rate_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_data_rate_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetOutputDataRate
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Disable
</UL>

<P><STRONG><a name="[138]"></a>lsm303agr_xl_data_rate_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Enable
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Disable
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_SetOutputDataRate_When_Enabled
</UL>

<P><STRONG><a name="[142]"></a>lsm303agr_xl_device_id_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm303agr_reg.o(i.lsm303agr_xl_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm303agr_xl_device_id_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadID
</UL>

<P><STRONG><a name="[140]"></a>lsm303agr_xl_fifo_mode_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_fifo_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_fifo_mode_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Init
</UL>

<P><STRONG><a name="[13b]"></a>lsm303agr_xl_full_scale_get</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_full_scale_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetFullScale
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivityNM
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivityLP
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivityHR
</UL>

<P><STRONG><a name="[141]"></a>lsm303agr_xl_full_scale_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_full_scale_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_full_scale_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_write_reg
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_SetFullScale
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_Init
</UL>

<P><STRONG><a name="[139]"></a>lsm303agr_xl_operating_mode_get</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lsm303agr_reg.o(i.lsm303agr_xl_operating_mode_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm303agr_xl_operating_mode_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivity
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetOutputDataRate
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetAxesRaw
</UL>

<P><STRONG><a name="[153]"></a>lsm6dsl_acceleration_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm6dsl_reg.o(i.lsm6dsl_acceleration_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm6dsl_acceleration_raw_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetAxesRaw
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetAxes
</UL>

<P><STRONG><a name="[15a]"></a>lsm6dsl_angular_rate_raw_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm6dsl_reg.o(i.lsm6dsl_angular_rate_raw_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm6dsl_angular_rate_raw_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetAxesRaw
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetAxes
</UL>

<P><STRONG><a name="[15f]"></a>lsm6dsl_auto_increment_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_auto_increment_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_auto_increment_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
</UL>

<P><STRONG><a name="[160]"></a>lsm6dsl_block_data_update_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_block_data_update_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_block_data_update_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
</UL>

<P><STRONG><a name="[162]"></a>lsm6dsl_device_id_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lsm6dsl_reg.o(i.lsm6dsl_device_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lsm6dsl_device_id_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ReadID
</UL>

<P><STRONG><a name="[161]"></a>lsm6dsl_fifo_mode_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_fifo_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_fifo_mode_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
</UL>

<P><STRONG><a name="[158]"></a>lsm6dsl_gy_data_rate_get</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_gy_data_rate_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_gy_data_rate_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetOutputDataRate
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_Disable
</UL>

<P><STRONG><a name="[159]"></a>lsm6dsl_gy_data_rate_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_gy_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_gy_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_Enable
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_Disable
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_SetOutputDataRate_When_Enabled
</UL>

<P><STRONG><a name="[15b]"></a>lsm6dsl_gy_full_scale_get</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_gy_full_scale_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_gy_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetSensitivity
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_GetFullScale
</UL>

<P><STRONG><a name="[15c]"></a>lsm6dsl_gy_full_scale_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_gy_full_scale_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_gy_full_scale_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_SetFullScale
</UL>

<P><STRONG><a name="[19a]"></a>lsm6dsl_read_reg</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_set
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_get
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_set
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_get
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_set
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_get
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_set
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_get
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_fifo_mode_set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_device_id_get
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_block_data_update_set
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_auto_increment_set
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_angular_rate_raw_get
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_acceleration_raw_get
</UL>

<P><STRONG><a name="[164]"></a>lsm6dsl_write_reg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lsm6dsl_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Write_Reg
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_full_scale_set
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_set
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_full_scale_set
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_set
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_fifo_mode_set
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_block_data_update_set
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_auto_increment_set
</UL>

<P><STRONG><a name="[151]"></a>lsm6dsl_xl_data_rate_get</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_xl_data_rate_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_xl_data_rate_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetOutputDataRate
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_Disable
</UL>

<P><STRONG><a name="[152]"></a>lsm6dsl_xl_data_rate_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_xl_data_rate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_xl_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_Enable
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_Disable
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_SetOutputDataRate_When_Enabled
</UL>

<P><STRONG><a name="[154]"></a>lsm6dsl_xl_full_scale_get</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_xl_full_scale_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_xl_full_scale_get &rArr; lsm6dsl_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetSensitivity
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GetFullScale
</UL>

<P><STRONG><a name="[155]"></a>lsm6dsl_xl_full_scale_set</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lsm6dsl_reg.o(i.lsm6dsl_xl_full_scale_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lsm6dsl_xl_full_scale_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_write_reg
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_Init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_SetFullScale
</UL>

<P><STRONG><a name="[8f]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = main &rArr; MX_MEMS_Init &rArr; MX_IKS01A2_DataLogTerminal_Init &rArr; floatToInt &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MEMS_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lib_Process
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[184]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[16c]"></a>MX_IKS01A2_DataLogTerminal_Init</STRONG> (Thumb, 616 bytes, Stack size 40 bytes, app_x-cube-mems1.o(i.MX_IKS01A2_DataLogTerminal_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MX_IKS01A2_DataLogTerminal_Init &rArr; floatToInt &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_GetCapabilities
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_ENV_SENSOR_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_ENV_SENSOR_GetCapabilities
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_COM_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MEMS_Init
</UL>

<P><STRONG><a name="[170]"></a>floatToInt</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, app_x-cube-mems1.o(i.floatToInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = floatToInt &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_trunc
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IKS01A2_DataLogTerminal_Init
</UL>

<P><STRONG><a name="[c1]"></a>I2C1_MspDeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_nucleo_bus.o(i.I2C1_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C1_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_DeInit
</UL>

<P><STRONG><a name="[c4]"></a>I2C1_MspInit</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, stm32f4xx_nucleo_bus.o(i.I2C1_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C1_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_I2C1_Init
</UL>

<P><STRONG><a name="[a3]"></a>BUTTON_USER_EXTI_Callback</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(i.BUTTON_USER_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BUTTON_USER_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_nucleo.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>USART2_MspInit</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(i.USART2_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART2_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_COM_Init
</UL>

<P><STRONG><a name="[11d]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
</UL>

<P><STRONG><a name="[df]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, stm32f4xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[e1]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, stm32f4xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[e3]"></a>I2C_WaitOnBTFFlagUntilTimeout</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_hal_i2c.o(i.I2C_WaitOnBTFFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnBTFFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[de]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, stm32f4xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[11c]"></a>I2C_WaitOnMasterAddressFlagUntilTimeout</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, stm32f4xx_hal_i2c.o(i.I2C_WaitOnMasterAddressFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[e0]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[e2]"></a>I2C_WaitOnTXEFlagUntilTimeout</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_hal_i2c.o(i.I2C_WaitOnTXEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnTXEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[103]"></a>UART_SetConfig</STRONG> (Thumb, 864 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[105]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[f6]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[f5]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[f7]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[e9]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[ea]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[157]"></a>LSM6DSL_ACC_SetOutputDataRate_When_Disabled</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, lsm6dsl.o(i.LSM6DSL_ACC_SetOutputDataRate_When_Disabled))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_SetOutputDataRate
</UL>

<P><STRONG><a name="[156]"></a>LSM6DSL_ACC_SetOutputDataRate_When_Enabled</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_ACC_SetOutputDataRate_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_ACC_SetOutputDataRate_When_Enabled &rArr; lsm6dsl_xl_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_xl_data_rate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_SetOutputDataRate
</UL>

<P><STRONG><a name="[15e]"></a>LSM6DSL_GYRO_SetOutputDataRate_When_Disabled</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_SetOutputDataRate_When_Disabled))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_SetOutputDataRate
</UL>

<P><STRONG><a name="[15d]"></a>LSM6DSL_GYRO_SetOutputDataRate_When_Enabled</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, lsm6dsl.o(i.LSM6DSL_GYRO_SetOutputDataRate_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM6DSL_GYRO_SetOutputDataRate_When_Enabled &rArr; lsm6dsl_gy_data_rate_set &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm6dsl_gy_data_rate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GYRO_SetOutputDataRate
</UL>

<P><STRONG><a name="[9f]"></a>ReadRegWrap</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lsm6dsl.o(i.ReadRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(i.LSM6DSL_RegisterBusIO)
</UL>
<P><STRONG><a name="[a0]"></a>WriteRegWrap</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lsm6dsl.o(i.WriteRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6dsl.o(i.LSM6DSL_RegisterBusIO)
</UL>
<P><STRONG><a name="[13c]"></a>LSM303AGR_ACC_GetSensitivityHR</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetSensitivityHR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_GetSensitivityHR &rArr; lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivity
</UL>

<P><STRONG><a name="[13e]"></a>LSM303AGR_ACC_GetSensitivityLP</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetSensitivityLP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_GetSensitivityLP &rArr; lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivity
</UL>

<P><STRONG><a name="[13d]"></a>LSM303AGR_ACC_GetSensitivityNM</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_GetSensitivityNM))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_GetSensitivityNM &rArr; lsm303agr_xl_full_scale_get &rArr; lsm303agr_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_full_scale_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetSensitivity
</UL>

<P><STRONG><a name="[145]"></a>LSM303AGR_ACC_SetOutputDataRate_When_Disabled</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, lsm303agr.o(i.LSM303AGR_ACC_SetOutputDataRate_When_Disabled))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_SetOutputDataRate
</UL>

<P><STRONG><a name="[144]"></a>LSM303AGR_ACC_SetOutputDataRate_When_Enabled</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lsm303agr.o(i.LSM303AGR_ACC_SetOutputDataRate_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303AGR_ACC_SetOutputDataRate_When_Enabled &rArr; lsm303agr_xl_data_rate_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303agr_xl_data_rate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_SetOutputDataRate
</UL>

<P><STRONG><a name="[9b]"></a>ReadAccRegWrap</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lsm303agr.o(i.ReadAccRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadAccRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(i.LSM303AGR_ACC_RegisterBusIO)
</UL>
<P><STRONG><a name="[9d]"></a>ReadMagRegWrap</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lsm303agr.o(i.ReadMagRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadMagRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(i.LSM303AGR_MAG_RegisterBusIO)
</UL>
<P><STRONG><a name="[9c]"></a>WriteAccRegWrap</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lsm303agr.o(i.WriteAccRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteAccRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(i.LSM303AGR_ACC_RegisterBusIO)
</UL>
<P><STRONG><a name="[9e]"></a>WriteMagRegWrap</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lsm303agr.o(i.WriteMagRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteMagRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm303agr.o(i.LSM303AGR_MAG_RegisterBusIO)
</UL>
<P><STRONG><a name="[108]"></a>HTS221_GetOutputDataRate</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, hts221.o(i.HTS221_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HTS221_GetOutputDataRate &rArr; hts221_data_rate_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetOutputDataRate
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetOutputDataRate
</UL>

<P><STRONG><a name="[112]"></a>HTS221_Initialize</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, hts221.o(i.HTS221_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HTS221_Initialize &rArr; HTS221_SetOutputDataRate &rArr; hts221_data_rate_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_SetOutputDataRate
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_power_on_set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_block_data_update_set
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Init
</UL>

<P><STRONG><a name="[111]"></a>HTS221_SetOutputDataRate</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, hts221.o(i.HTS221_SetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HTS221_SetOutputDataRate &rArr; hts221_data_rate_set &rArr; hts221_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hts221_data_rate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_SetOutputDataRate
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_SetOutputDataRate
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_Initialize
</UL>

<P><STRONG><a name="[110]"></a>Linear_Interpolation</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, hts221.o(i.Linear_Interpolation))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_TEMP_GetTemperature
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_HUM_GetHumidity
</UL>

<P><STRONG><a name="[97]"></a>ReadRegWrap</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, hts221.o(i.ReadRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(i.HTS221_RegisterBusIO)
</UL>
<P><STRONG><a name="[98]"></a>WriteRegWrap</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, hts221.o(i.WriteRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hts221.o(i.HTS221_RegisterBusIO)
</UL>
<P><STRONG><a name="[125]"></a>LPS22HB_GetOutputDataRate</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lps22hb.o(i.LPS22HB_GetOutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPS22HB_GetOutputDataRate &rArr; lps22hb_data_rate_get &rArr; lps22hb_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_GetOutputDataRate
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_GetOutputDataRate
</UL>

<P><STRONG><a name="[127]"></a>LPS22HB_Initialize</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, lps22hb.o(i.LPS22HB_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LPS22HB_Initialize &rArr; lps22hb_low_power_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_low_power_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_low_pass_filter_mode_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_block_data_update_set
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_auto_add_inc_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_Init
</UL>

<P><STRONG><a name="[130]"></a>LPS22HB_SetOutputDataRate_When_Disabled</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lps22hb.o(i.LPS22HB_SetOutputDataRate_When_Disabled))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_SetOutputDataRate
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_SetOutputDataRate
</UL>

<P><STRONG><a name="[12f]"></a>LPS22HB_SetOutputDataRate_When_Enabled</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lps22hb.o(i.LPS22HB_SetOutputDataRate_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPS22HB_SetOutputDataRate_When_Enabled &rArr; lps22hb_data_rate_set &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_set
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps22hb_data_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_TEMP_SetOutputDataRate
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_PRESS_SetOutputDataRate
</UL>

<P><STRONG><a name="[99]"></a>ReadRegWrap</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lps22hb.o(i.ReadRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(i.LPS22HB_RegisterBusIO)
</UL>
<P><STRONG><a name="[9a]"></a>WriteRegWrap</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lps22hb.o(i.WriteRegWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteRegWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps22hb.o(i.LPS22HB_RegisterBusIO)
</UL>
<P><STRONG><a name="[122]"></a>LSM303AGR_ACC_0_Probe</STRONG> (Thumb, 208 bytes, Stack size 72 bytes, iks01a2_motion_sensors.o(i.LSM303AGR_ACC_0_Probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LSM303AGR_ACC_0_Probe &rArr; LSM303AGR_ACC_RegisterBusIO &rArr; LSM303AGR_ACC_Write_Reg &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_RegisterBusIO
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_ReadID
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_ACC_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_Init
</UL>

<P><STRONG><a name="[123]"></a>LSM303AGR_MAG_0_Probe</STRONG> (Thumb, 208 bytes, Stack size 72 bytes, iks01a2_motion_sensors.o(i.LSM303AGR_MAG_0_Probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LSM303AGR_MAG_0_Probe &rArr; LSM303AGR_MAG_RegisterBusIO &rArr; lsm303agr_mag_i2c_interface_set &rArr; lsm303agr_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_RegisterBusIO
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_ReadID
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303AGR_MAG_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_Init
</UL>

<P><STRONG><a name="[121]"></a>LSM6DSL_0_Probe</STRONG> (Thumb, 246 bytes, Stack size 72 bytes, iks01a2_motion_sensors.o(i.LSM6DSL_0_Probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LSM6DSL_0_Probe &rArr; LSM6DSL_RegisterBusIO &rArr; LSM6DSL_Write_Reg &rArr; lsm6dsl_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_RegisterBusIO
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ReadID
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_MOTION_SENSOR_Init
</UL>

<P><STRONG><a name="[106]"></a>HTS221_0_Probe</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, iks01a2_env_sensors.o(i.HTS221_0_Probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HTS221_0_Probe &rArr; HTS221_ReadID &rArr; hts221_device_id_get &rArr; hts221_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_RegisterBusIO
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_ReadID
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTS221_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_ENV_SENSOR_Init
</UL>

<P><STRONG><a name="[11f]"></a>LPS22HB_0_Probe</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, iks01a2_env_sensors.o(i.LPS22HB_0_Probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LPS22HB_0_Probe &rArr; LPS22HB_RegisterBusIO &rArr; LPS22HB_Write_Reg &rArr; lps22hb_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_RegisterBusIO
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_ReadID
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS22HB_GetCapabilities
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IKS01A2_ENV_SENSOR_Init
</UL>

<P><STRONG><a name="[17a]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf$8
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[191]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[190]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a2]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printf8.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0snprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
